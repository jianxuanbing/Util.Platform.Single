// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Util.Platform.Data.PgSql;

#nullable disable

namespace Util.Platform.Data.PgSql.Migrations
{
    [DbContext(typeof(SystemUnitOfWork))]
    [Migration("20230920160507_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Util.Platform.Domain.Models.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ApplicationId")
                        .HasComment("应用程序标识");

                    b.Property<string>("AllowedCorsOrigins")
                        .HasColumnType("text")
                        .HasColumnName("AllowedCorsOrigins")
                        .HasComment("允许跨域来源");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("Code")
                        .HasComment("应用程序编码");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties")
                        .HasComment("扩展属性");

                    b.Property<bool>("IsApi")
                        .HasColumnType("boolean")
                        .HasColumnName("IsApi")
                        .HasComment("是否Api");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Name")
                        .HasComment("应用程序名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Application", "Permissions", t =>
                        {
                            t.HasComment("应用程序");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            AllowedCorsOrigins = "https://localhost:16003",
                            Code = "admin-ui",
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 211, DateTimeKind.Utc).AddTicks(4014),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"IsClient\":true,\"AccessTokenLifetime\":3600,\"AllowOfflineAccess\":true,\"RedirectUri\":\"https://localhost:16003/\"}",
                            IsApi = false,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 211, DateTimeKind.Utc).AddTicks(4017),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "管理系统后台",
                            Version = new byte[] { 53, 51, 99, 56, 57, 100, 48, 52, 45, 100, 53, 101, 55, 45, 52, 51, 101, 97, 45, 56, 54, 48, 101, 45, 55, 102, 97, 102, 97, 55, 99, 102, 99, 51, 56, 48 }
                        },
                        new
                        {
                            Id = new Guid("0f5fb254-47a1-4e2f-b79a-c7ad1d226ab9"),
                            Code = "admin-api",
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 211, DateTimeKind.Utc).AddTicks(4026),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{}",
                            IsApi = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 211, DateTimeKind.Utc).AddTicks(4027),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "管理系统Api",
                            Version = new byte[] { 57, 99, 97, 55, 51, 52, 100, 98, 45, 99, 57, 55, 99, 45, 52, 52, 53, 52, 45, 97, 99, 100, 98, 45, 56, 48, 101, 56, 100, 100, 102, 48, 101, 100, 52, 49 }
                        },
                        new
                        {
                            Id = new Guid("9f6bc688-2634-4098-b622-4bde9a3ab5c4"),
                            AllowedCorsOrigins = "https://localhost:12086",
                            Code = "api-swagger",
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 211, DateTimeKind.Utc).AddTicks(4043),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"IsClient\":true,\"AccessTokenLifetime\":3600,\"AllowOfflineAccess\":true,\"RedirectUri\":\"https://localhost:12086/swagger/oauth2-redirect.html\"}",
                            IsApi = false,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 211, DateTimeKind.Utc).AddTicks(4044),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "Swagger UI - Util Platform Api",
                            Version = new byte[] { 97, 49, 51, 99, 97, 57, 98, 52, 45, 57, 57, 101, 98, 45, 52, 102, 48, 100, 45, 97, 50, 51, 48, 45, 98, 99, 100, 49, 101, 97, 100, 97, 50, 99, 100, 102 }
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.Claim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ClaimId")
                        .HasComment("声明标识");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Name")
                        .HasComment("声明名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int?>("SortId")
                        .HasColumnType("integer")
                        .HasColumnName("SortId")
                        .HasComment("排序号");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Claim", "Permissions", t =>
                        {
                            t.HasComment("声明");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b422322-b7f5-4081-e10a-fa96a85c5b86"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1623),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1629),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "sub",
                            Remark = "用户标识",
                            SortId = 1,
                            Version = new byte[] { 57, 52, 51, 54, 100, 53, 55, 49, 45, 100, 97, 55, 51, 45, 52, 98, 55, 99, 45, 97, 54, 48, 101, 45, 101, 57, 56, 102, 101, 98, 55, 52, 54, 53, 50, 101 }
                        },
                        new
                        {
                            Id = new Guid("70a9173d-2216-7bf6-2cbe-f0b2d38c524d"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1648),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1648),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "profile",
                            Remark = "用户个人信息",
                            SortId = 2,
                            Version = new byte[] { 55, 55, 55, 100, 48, 98, 102, 52, 45, 51, 49, 53, 100, 45, 52, 54, 56, 48, 45, 56, 100, 56, 56, 45, 48, 56, 57, 54, 97, 97, 49, 97, 56, 57, 100, 102 }
                        },
                        new
                        {
                            Id = new Guid("1a331188-3318-a029-c8c8-71258c7041b2"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1652),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1652),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "name",
                            Remark = "用户名",
                            SortId = 3,
                            Version = new byte[] { 55, 52, 100, 48, 102, 55, 99, 99, 45, 52, 97, 49, 55, 45, 52, 101, 100, 49, 45, 56, 49, 49, 54, 45, 99, 53, 49, 49, 99, 101, 55, 53, 97, 49, 99, 52 }
                        },
                        new
                        {
                            Id = new Guid("27d23b13-0cb5-20aa-c65a-81bd90c35212"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1657),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1658),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "nickname",
                            Remark = "昵称",
                            SortId = 4,
                            Version = new byte[] { 51, 49, 97, 99, 101, 102, 102, 97, 45, 50, 102, 49, 52, 45, 52, 53, 53, 49, 45, 56, 48, 55, 100, 45, 57, 100, 97, 55, 48, 99, 52, 100, 56, 48, 57, 99 }
                        },
                        new
                        {
                            Id = new Guid("c38280ce-92f9-77be-1e17-87cd58c3fff1"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1665),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1666),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "email",
                            Remark = "电子邮件",
                            SortId = 5,
                            Version = new byte[] { 49, 55, 54, 48, 56, 48, 99, 101, 45, 98, 51, 52, 99, 45, 52, 52, 57, 100, 45, 98, 48, 50, 53, 45, 56, 49, 97, 101, 101, 100, 54, 51, 49, 51, 100, 54 }
                        },
                        new
                        {
                            Id = new Guid("88a7eae0-3187-ac06-3766-8edf13d06776"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1670),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1670),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "phone_number",
                            Remark = "手机号",
                            SortId = 6,
                            Version = new byte[] { 99, 49, 52, 54, 53, 55, 100, 54, 45, 56, 100, 101, 54, 45, 52, 51, 52, 97, 45, 57, 102, 57, 57, 45, 57, 100, 99, 101, 102, 54, 97, 50, 57, 57, 53, 48 }
                        },
                        new
                        {
                            Id = new Guid("19af94f7-80a2-5d42-d432-278a23b10492"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1674),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 213, DateTimeKind.Utc).AddTicks(1675),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "application_id",
                            Remark = "应用程序标识",
                            SortId = 7,
                            Version = new byte[] { 100, 99, 48, 102, 99, 48, 48, 99, 45, 100, 56, 56, 53, 45, 52, 50, 55, 52, 45, 98, 56, 98, 49, 45, 100, 57, 98, 102, 97, 101, 54, 56, 50, 102, 53, 101 }
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.CommonOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("OperationId")
                        .HasComment("操作标识");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name")
                        .HasComment("操作名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int?>("SortId")
                        .HasColumnType("integer")
                        .HasColumnName("SortId")
                        .HasComment("排序号");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CommonOperation", "Permissions", t =>
                        {
                            t.HasComment("常用操作资源");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("7de225c2-97f0-599f-392f-8c3c4f20424a"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9358),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9361),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "查看",
                            SortId = 1,
                            Version = new byte[] { 97, 97, 100, 51, 49, 99, 51, 48, 45, 57, 48, 53, 48, 45, 52, 55, 98, 98, 45, 56, 49, 56, 49, 45, 48, 53, 101, 100, 55, 57, 51, 101, 48, 102, 55, 102 }
                        },
                        new
                        {
                            Id = new Guid("50621bb8-47e5-c255-f144-7d8fe125f9c5"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9370),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9371),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "创建",
                            SortId = 2,
                            Version = new byte[] { 52, 52, 101, 49, 102, 53, 57, 97, 45, 97, 55, 51, 49, 45, 52, 53, 97, 54, 45, 56, 100, 56, 57, 45, 50, 56, 100, 51, 55, 98, 48, 100, 53, 100, 56, 99 }
                        },
                        new
                        {
                            Id = new Guid("be5e151c-750d-6c84-3f63-fb6b6e4d9c60"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9375),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9375),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "更新",
                            SortId = 3,
                            Version = new byte[] { 101, 100, 48, 52, 57, 55, 98, 101, 45, 54, 54, 55, 55, 45, 52, 55, 98, 54, 45, 97, 52, 99, 49, 45, 53, 53, 100, 57, 55, 57, 99, 56, 57, 55, 102, 52 }
                        },
                        new
                        {
                            Id = new Guid("5938e49c-a434-6fd8-f826-ca53914eb639"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9379),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9380),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "删除",
                            SortId = 4,
                            Version = new byte[] { 50, 50, 99, 57, 49, 54, 48, 100, 45, 102, 52, 98, 102, 45, 52, 56, 56, 101, 45, 97, 55, 101, 56, 45, 49, 51, 53, 102, 53, 50, 48, 48, 101, 55, 102, 53 }
                        },
                        new
                        {
                            Id = new Guid("9fcddc9b-9c9f-9ef6-b9cc-dac52bdfce6d"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9383),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9384),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "管理",
                            SortId = 5,
                            Version = new byte[] { 53, 52, 53, 48, 55, 50, 53, 54, 45, 102, 52, 51, 99, 45, 52, 51, 54, 53, 45, 97, 53, 53, 52, 45, 54, 50, 100, 100, 52, 54, 56, 102, 55, 100, 51, 53 }
                        },
                        new
                        {
                            Id = new Guid("1f2a241b-cd39-a8f6-3f0b-8ba1429ee7d8"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9387),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9388),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "保存",
                            SortId = 6,
                            Version = new byte[] { 50, 55, 51, 53, 49, 97, 97, 101, 45, 52, 54, 98, 98, 45, 52, 101, 102, 101, 45, 98, 54, 97, 53, 45, 54, 53, 101, 57, 52, 55, 52, 55, 48, 49, 97, 54 }
                        },
                        new
                        {
                            Id = new Guid("a4f60b2a-69ed-47f3-42a8-488d87d7b3b8"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9391),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9391),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "启用",
                            SortId = 7,
                            Version = new byte[] { 56, 50, 97, 49, 48, 54, 99, 102, 45, 101, 53, 97, 101, 45, 52, 54, 99, 55, 45, 97, 53, 102, 52, 45, 50, 53, 97, 52, 54, 48, 100, 97, 99, 52, 99, 52 }
                        },
                        new
                        {
                            Id = new Guid("71bf64bc-d530-d5d9-fe18-a425c622e81b"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9394),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9395),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "禁用",
                            SortId = 8,
                            Version = new byte[] { 56, 55, 100, 100, 53, 53, 98, 54, 45, 100, 48, 52, 56, 45, 52, 50, 56, 54, 45, 57, 54, 102, 50, 45, 52, 53, 48, 53, 98, 97, 54, 53, 54, 56, 99, 49 }
                        },
                        new
                        {
                            Id = new Guid("67c2e873-bd4c-8bf4-278d-1a47071c18ba"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9398),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 214, DateTimeKind.Utc).AddTicks(9399),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Name = "审核",
                            SortId = 9,
                            Version = new byte[] { 54, 54, 53, 52, 48, 56, 55, 97, 45, 48, 100, 57, 54, 45, 52, 54, 56, 57, 45, 56, 51, 49, 101, 45, 48, 99, 97, 100, 99, 50, 101, 53, 56, 51, 49, 101 }
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.OperationApi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("OperationApiId")
                        .HasComment("操作Api标识");

                    b.Property<Guid>("ApiId")
                        .HasColumnType("uuid")
                        .HasColumnName("ApiId")
                        .HasComment("Api资源标识");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uuid")
                        .HasColumnName("OperationId")
                        .HasComment("操作资源标识");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("OperationApi", "Permissions", t =>
                        {
                            t.HasComment("操作Api");
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("PermissionId")
                        .HasComment("权限标识");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpirationTime")
                        .HasComment("到期时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<bool>("IsDeny")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeny")
                        .HasComment("拒绝");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("boolean")
                        .HasColumnName("IsTemporary")
                        .HasComment("临时");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("ResourceId")
                        .HasComment("资源标识");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("RoleId")
                        .HasComment("角色标识");

                    b.Property<string>("TenantId")
                        .HasColumnType("text")
                        .HasColumnName("TenantId")
                        .HasComment("租户标识");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ResourceId");

                    b.ToTable("Permission", "Permissions", t =>
                        {
                            t.HasComment("权限");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ba0d59a-ccc1-469c-8b15-a5867d4832b1"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(5686),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            IsDeleted = false,
                            IsDeny = false,
                            IsTemporary = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(5689),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            ResourceId = new Guid("73443ecd-fb73-4987-9a9d-cd69fc0881c0"),
                            RoleId = new Guid("3465bc8f-dc86-46da-bb97-1721e257143c"),
                            Version = new byte[] { 100, 53, 100, 48, 98, 49, 101, 48, 45, 50, 56, 102, 100, 45, 52, 57, 52, 100, 45, 56, 51, 98, 53, 45, 55, 100, 50, 99, 56, 55, 49, 98, 100, 97, 48, 97 }
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ResourceId")
                        .HasComment("资源标识");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uuid")
                        .HasColumnName("ApplicationId")
                        .HasComment("应用程序标识");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties")
                        .HasComment("扩展属性");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("Level")
                        .HasComment("层级");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Name")
                        .HasComment("资源名称");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("ParentId")
                        .HasComment("父标识");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("Path")
                        .HasComment("路径");

                    b.Property<string>("PinYin")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("PinYin")
                        .HasComment("拼音简码");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int?>("SortId")
                        .HasColumnType("integer")
                        .HasColumnName("SortId")
                        .HasComment("排序号");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("Type")
                        .HasComment("资源类型");

                    b.Property<string>("Uri")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("Uri")
                        .HasComment("资源标识符");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("Resource", "Permissions", t =>
                        {
                            t.HasComment("资源");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec9c35b4-3dfd-4cee-be70-9d83993b40e5"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9954),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9955),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 1,
                            Name = "系统管理",
                            Path = "ec9c35b4-3dfd-4cee-be70-9d83993b40e5,",
                            PinYin = "xtgl",
                            Remark = "系统管理",
                            SortId = 1,
                            Type = 1,
                            Version = new byte[] { 101, 55, 51, 56, 97, 57, 54, 101, 45, 53, 49, 55, 101, 45, 52, 56, 48, 98, 45, 57, 102, 98, 55, 45, 53, 100, 50, 54, 49, 54, 56, 56, 56, 102, 49, 100 }
                        },
                        new
                        {
                            Id = new Guid("9412c649-2353-4f37-a178-21a66a7ad3bf"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9969),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9969),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 2,
                            Name = "应用程序",
                            ParentId = new Guid("ec9c35b4-3dfd-4cee-be70-9d83993b40e5"),
                            Path = "ec9c35b4-3dfd-4cee-be70-9d83993b40e5,9412c649-2353-4f37-a178-21a66a7ad3bf,",
                            PinYin = "yycx",
                            Remark = "应用程序",
                            SortId = 1,
                            Type = 1,
                            Uri = "/identity/application",
                            Version = new byte[] { 55, 54, 54, 52, 101, 101, 52, 50, 45, 49, 57, 54, 56, 45, 52, 98, 54, 97, 45, 57, 51, 101, 54, 45, 56, 53, 49, 53, 50, 52, 101, 97, 97, 57, 55, 99 }
                        },
                        new
                        {
                            Id = new Guid("ccb74938-7e59-4532-a1ec-850ca75dd7b9"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9977),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9978),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 2,
                            Name = "声明",
                            ParentId = new Guid("ec9c35b4-3dfd-4cee-be70-9d83993b40e5"),
                            Path = "ec9c35b4-3dfd-4cee-be70-9d83993b40e5,ccb74938-7e59-4532-a1ec-850ca75dd7b9,",
                            PinYin = "sm",
                            Remark = "声明",
                            SortId = 2,
                            Type = 1,
                            Uri = "/identity/claim",
                            Version = new byte[] { 52, 52, 102, 100, 49, 97, 52, 101, 45, 52, 57, 97, 98, 45, 52, 97, 53, 99, 45, 98, 55, 101, 99, 45, 102, 55, 54, 48, 102, 102, 97, 97, 51, 55, 98, 97 }
                        },
                        new
                        {
                            Id = new Guid("f85e2381-f85f-4978-aeaa-dd0a3106d1ab"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9986),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 222, DateTimeKind.Utc).AddTicks(9987),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 2,
                            Name = "资源",
                            ParentId = new Guid("ec9c35b4-3dfd-4cee-be70-9d83993b40e5"),
                            Path = "ec9c35b4-3dfd-4cee-be70-9d83993b40e5,f85e2381-f85f-4978-aeaa-dd0a3106d1ab,",
                            PinYin = "zy",
                            Remark = "资源",
                            SortId = 3,
                            Type = 1,
                            Uri = "/identity/resource",
                            Version = new byte[] { 56, 56, 49, 98, 101, 51, 48, 54, 45, 57, 97, 99, 99, 45, 52, 98, 56, 102, 45, 97, 54, 51, 56, 45, 49, 97, 52, 51, 101, 100, 56, 98, 50, 102, 52, 55 }
                        },
                        new
                        {
                            Id = new Guid("1a01a8c3-1e6f-47d8-be75-b66da7f7a746"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(2),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(2),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 2,
                            Name = "角色",
                            ParentId = new Guid("ec9c35b4-3dfd-4cee-be70-9d83993b40e5"),
                            Path = "ec9c35b4-3dfd-4cee-be70-9d83993b40e5,1a01a8c3-1e6f-47d8-be75-b66da7f7a746,",
                            PinYin = "js",
                            Remark = "角色",
                            SortId = 4,
                            Type = 1,
                            Uri = "/identity/role",
                            Version = new byte[] { 97, 52, 102, 97, 52, 54, 98, 48, 45, 99, 97, 100, 49, 45, 52, 56, 54, 50, 45, 57, 51, 56, 56, 45, 49, 98, 100, 100, 56, 101, 102, 100, 54, 48, 55, 100 }
                        },
                        new
                        {
                            Id = new Guid("a4c32fa8-f8eb-4ce9-a517-d96d431fcb04"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(10),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(11),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 2,
                            Name = "用户",
                            ParentId = new Guid("ec9c35b4-3dfd-4cee-be70-9d83993b40e5"),
                            Path = "ec9c35b4-3dfd-4cee-be70-9d83993b40e5,a4c32fa8-f8eb-4ce9-a517-d96d431fcb04,",
                            PinYin = "yh",
                            Remark = "用户",
                            SortId = 5,
                            Type = 1,
                            Uri = "/identity/user",
                            Version = new byte[] { 55, 53, 100, 53, 49, 55, 54, 50, 45, 100, 53, 49, 55, 45, 52, 53, 50, 102, 45, 98, 102, 52, 54, 45, 54, 55, 99, 102, 48, 100, 101, 57, 99, 100, 50, 54 }
                        },
                        new
                        {
                            Id = new Guid("3493f51d-ac81-4f39-80ea-0acb02c9fee2"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(24),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[\"sub\"]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(24),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 1,
                            Name = "openid",
                            Path = "3493f51d-ac81-4f39-80ea-0acb02c9fee2,",
                            Remark = "用户标识",
                            SortId = 1,
                            Type = 5,
                            Uri = "openid",
                            Version = new byte[] { 54, 56, 55, 57, 50, 102, 55, 55, 45, 52, 97, 97, 97, 45, 52, 101, 97, 48, 45, 97, 49, 97, 56, 45, 101, 53, 99, 57, 52, 48, 48, 55, 48, 57, 49, 48 }
                        },
                        new
                        {
                            Id = new Guid("cda87744-449d-4060-8f99-88c4223d103f"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(33),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[\"profile\",\"name\"]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(33),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 1,
                            Name = "profile",
                            Path = "cda87744-449d-4060-8f99-88c4223d103f,",
                            Remark = "用户信息",
                            SortId = 1,
                            Type = 5,
                            Uri = "profile",
                            Version = new byte[] { 53, 102, 101, 50, 51, 100, 98, 53, 45, 55, 48, 50, 48, 45, 52, 53, 57, 54, 45, 57, 102, 49, 54, 45, 99, 57, 50, 53, 50, 53, 50, 49, 50, 57, 57, 51 }
                        },
                        new
                        {
                            Id = new Guid("73443ecd-fb73-4987-9a9d-cd69fc0881c0"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(38),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(38),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 0,
                            Name = "查看",
                            ParentId = new Guid("9412c649-2353-4f37-a178-21a66a7ad3bf"),
                            SortId = 1,
                            Type = 2,
                            Uri = "application.view",
                            Version = new byte[] { 99, 98, 97, 57, 50, 48, 102, 51, 45, 51, 99, 55, 97, 45, 52, 52, 56, 51, 45, 98, 57, 57, 49, 45, 98, 52, 52, 102, 55, 97, 48, 101, 52, 57, 102, 48 }
                        },
                        new
                        {
                            Id = new Guid("a7c889b7-4f7e-416c-a4e7-6694e61c4abd"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(43),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(43),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 0,
                            Name = "创建",
                            ParentId = new Guid("9412c649-2353-4f37-a178-21a66a7ad3bf"),
                            SortId = 2,
                            Type = 2,
                            Uri = "application.create",
                            Version = new byte[] { 100, 100, 57, 97, 51, 53, 54, 54, 45, 49, 98, 101, 52, 45, 52, 51, 53, 101, 45, 98, 57, 100, 52, 45, 99, 101, 57, 100, 57, 52, 55, 97, 53, 48, 53, 51 }
                        },
                        new
                        {
                            Id = new Guid("575a2e6e-6b3d-40ef-abd0-a820be29cc8f"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(60),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(60),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 0,
                            Name = "更新",
                            ParentId = new Guid("9412c649-2353-4f37-a178-21a66a7ad3bf"),
                            SortId = 3,
                            Type = 2,
                            Uri = "application.update",
                            Version = new byte[] { 51, 98, 101, 98, 56, 56, 55, 54, 45, 101, 53, 56, 52, 45, 52, 54, 100, 56, 45, 98, 57, 102, 98, 45, 53, 101, 98, 49, 55, 99, 53, 49, 100, 54, 50, 99 }
                        },
                        new
                        {
                            Id = new Guid("8f979359-a998-4c8e-83b7-b22815dab9a8"),
                            ApplicationId = new Guid("e9138a35-a4ff-460e-ac55-b743d55b9691"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(66),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{\"Claims\":[]}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 223, DateTimeKind.Utc).AddTicks(67),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 0,
                            Name = "删除",
                            ParentId = new Guid("9412c649-2353-4f37-a178-21a66a7ad3bf"),
                            SortId = 4,
                            Type = 2,
                            Uri = "application.delete",
                            Version = new byte[] { 56, 102, 97, 102, 48, 98, 98, 101, 45, 53, 49, 100, 55, 45, 52, 101, 56, 55, 45, 97, 52, 51, 49, 45, 57, 56, 57, 57, 55, 50, 102, 48, 57, 52, 99, 55 }
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("RoleId")
                        .HasComment("角色标识");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Code")
                        .HasComment("角色编码");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties")
                        .HasComment("扩展属性");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAdmin")
                        .HasComment("管理员");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("Level")
                        .HasComment("层级");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Name")
                        .HasComment("角色名称");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("NormalizedName")
                        .HasComment("标准化角色名称");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("ParentId")
                        .HasComment("父标识");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("Path")
                        .HasComment("路径");

                    b.Property<string>("PinYin")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("PinYin")
                        .HasComment("拼音简码");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int?>("SortId")
                        .HasColumnType("integer")
                        .HasColumnName("SortId")
                        .HasComment("排序号");

                    b.Property<string>("TenantId")
                        .HasColumnType("text")
                        .HasColumnName("TenantId")
                        .HasComment("租户标识");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("Type")
                        .HasComment("角色类型");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Role", "Permissions", t =>
                        {
                            t.HasComment("角色");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5c3cbde-f2be-47ac-bc85-a329f79588f8"),
                            Code = "admin",
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 239, DateTimeKind.Utc).AddTicks(3776),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{}",
                            IsAdmin = true,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 239, DateTimeKind.Utc).AddTicks(3781),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 1,
                            Name = "管理员",
                            NormalizedName = "管理员",
                            Path = "d5c3cbde-f2be-47ac-bc85-a329f79588f8,",
                            PinYin = "gly",
                            Remark = "管理员",
                            SortId = 1,
                            Type = "Role",
                            Version = new byte[] { 57, 48, 101, 49, 102, 51, 102, 98, 45, 101, 102, 102, 100, 45, 52, 50, 57, 99, 45, 56, 54, 52, 54, 45, 53, 100, 50, 98, 97, 102, 99, 99, 101, 53, 101, 49 }
                        },
                        new
                        {
                            Id = new Guid("3465bc8f-dc86-46da-bb97-1721e257143c"),
                            Code = "test",
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 239, DateTimeKind.Utc).AddTicks(3795),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Enabled = true,
                            ExtraProperties = "{}",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 239, DateTimeKind.Utc).AddTicks(3796),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            Level = 1,
                            Name = "测试人员",
                            NormalizedName = "测试人员",
                            Path = "3465bc8f-dc86-46da-bb97-1721e257143c,",
                            PinYin = "csry",
                            Remark = "测试人员",
                            SortId = 1,
                            Type = "Role",
                            Version = new byte[] { 56, 102, 53, 57, 52, 97, 50, 53, 45, 48, 54, 97, 49, 45, 52, 97, 56, 48, 45, 56, 48, 55, 55, 45, 56, 100, 97, 54, 53, 101, 98, 51, 100, 101, 50, 48 }
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("UserId")
                        .HasComment("用户标识");

                    b.Property<int?>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("AccessFailedCount")
                        .HasComment("登录失败次数");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人标识");

                    b.Property<string>("CurrentLoginIp")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("CurrentLoginIp")
                        .HasComment("本次登陆Ip");

                    b.Property<DateTime?>("CurrentLoginTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CurrentLoginTime")
                        .HasComment("本次登陆时间");

                    b.Property<DateTime?>("DisabledTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DisabledTime")
                        .HasComment("冻结时间");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Email")
                        .HasComment("安全邮箱");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("EmailConfirmed")
                        .HasComment("邮箱是否已确认");

                    b.Property<bool?>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Enabled")
                        .HasComment("是否启用");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("text")
                        .HasColumnName("ExtraProperties")
                        .HasComment("扩展属性");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("LastLoginIp")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("LastLoginIp")
                        .HasComment("上次登陆Ip");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastLoginTime")
                        .HasComment("上次登陆时间");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationTime")
                        .HasComment("最后修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId")
                        .HasComment("最后修改人标识");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("LockoutEnabled")
                        .HasComment("是否启用锁定");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LockoutEnd")
                        .HasComment("锁定截止");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer")
                        .HasColumnName("LoginCount")
                        .HasComment("登录次数");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("NormalizedEmail")
                        .HasComment("标准化邮箱");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("NormalizedUserName")
                        .HasComment("标准化用户名");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("PasswordHash")
                        .HasComment("密码散列");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("PhoneNumber")
                        .HasComment("安全手机号");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("PhoneNumberConfirmed")
                        .HasComment("手机号是否已确认");

                    b.Property<string>("RegisterIp")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("RegisterIp")
                        .HasComment("注册Ip");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("SecurityStamp")
                        .HasComment("安全戳");

                    b.Property<string>("TenantId")
                        .HasColumnType("text")
                        .HasColumnName("TenantId")
                        .HasComment("租户标识");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("TwoFactorEnabled")
                        .HasComment("是否启用双因素认证");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("UserName")
                        .HasComment("用户名");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bytea")
                        .HasColumnName("Version")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("User", "Permissions", t =>
                        {
                            t.HasComment("用户");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 241, DateTimeKind.Utc).AddTicks(4478),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            EmailConfirmed = false,
                            Enabled = true,
                            ExtraProperties = "{}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 241, DateTimeKind.Utc).AddTicks(4482),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEP+Co27jHqc5JQ0LPfqcMbUtsrCHkZhK/oRC/xPysrV9FTT+siiMEOELuOL+LeN7Jw==",
                            PhoneNumberConfirmed = false,
                            Remark = "管理员",
                            SecurityStamp = "E3LEMZVTQRBJD2GDJXDNNJ7BF3GEEUBF",
                            TwoFactorEnabled = false,
                            UserName = "admin",
                            Version = new byte[] { 98, 100, 102, 55, 50, 54, 53, 50, 45, 48, 49, 50, 48, 45, 52, 56, 53, 48, 45, 97, 102, 57, 98, 45, 55, 54, 53, 97, 55, 100, 57, 55, 97, 51, 57, 54 }
                        },
                        new
                        {
                            Id = new Guid("c7cc9ba2-74e2-43f2-8250-7b01e849b03a"),
                            CreationTime = new DateTime(2023, 9, 20, 16, 5, 7, 241, DateTimeKind.Utc).AddTicks(4493),
                            CreatorId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            EmailConfirmed = false,
                            Enabled = true,
                            ExtraProperties = "{}",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2023, 9, 20, 16, 5, 7, 241, DateTimeKind.Utc).AddTicks(4493),
                            LastModifierId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            LockoutEnabled = false,
                            NormalizedUserName = "TEST",
                            PasswordHash = "AQAAAAIAAYagAAAAEL/2eO55+SdIu+k/R3xYVem14slhnggeUGSakH3eaPKwlUBZ/E1r5f5xZVLTTdO9Bw==",
                            PhoneNumberConfirmed = false,
                            Remark = "测试人员",
                            SecurityStamp = "A7NSFR322R5LQXDUKQCLOWED7VW6QUA2",
                            TwoFactorEnabled = false,
                            UserName = "test",
                            Version = new byte[] { 55, 49, 97, 101, 51, 97, 54, 57, 45, 48, 56, 56, 99, 45, 52, 100, 100, 49, 45, 98, 48, 50, 48, 45, 57, 54, 51, 98, 49, 55, 55, 57, 97, 100, 48, 52 }
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId")
                        .HasComment("用户标识");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("RoleId")
                        .HasComment("角色标识");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", "Permissions", t =>
                        {
                            t.HasComment("用户角色");
                        });

                    b.HasData(
                        new
                        {
                            UserId = new Guid("55ba53a6-e482-4d9b-8d91-3fba6610b896"),
                            RoleId = new Guid("d5c3cbde-f2be-47ac-bc85-a329f79588f8")
                        },
                        new
                        {
                            UserId = new Guid("c7cc9ba2-74e2-43f2-8250-7b01e849b03a"),
                            RoleId = new Guid("3465bc8f-dc86-46da-bb97-1721e257143c")
                        });
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.Permission", b =>
                {
                    b.HasOne("Util.Platform.Domain.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.Resource", b =>
                {
                    b.HasOne("Util.Platform.Domain.Models.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Util.Platform.Domain.Models.Resource", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Application");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Util.Platform.Domain.Models.UserRole", b =>
                {
                    b.HasOne("Util.Platform.Domain.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Util.Platform.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
